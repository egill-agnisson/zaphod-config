/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF_L 0
#define NAV_L 1
#define SYM_L 2
#define FUN_L 3
#define KBR_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        lbrc_kp {
	    timeout-ms = <50>;
            key-positions = <10 11>;
            layers = <DEF_L>;
            bindings = <&kp LBRC>;
        };

        lbkt_kp {
	    timeout-ms = <50>;
            key-positions = <11 12>;
            layers = <DEF_L>;
            bindings = <&kp LBKT>;
        };

        lpar_kp {
	    timeout-ms = <50>;
            key-positions = <12 13>;
            layers = <DEF_L>;
            bindings = <&kp LPAR>;
        };

        rpar_kp {
	    timeout-ms = <50>;
            key-positions = <16 17>;
            layers = <DEF_L>;
            bindings = <&kp RPAR>;
        };

        rbkt_kp {
	    timeout-ms = <50>;
            key-positions = <17 18>;
            layers = <DEF_L>;
            bindings = <&kp RBKT>;
        };

        rbrc_kp {
	    timeout-ms = <50>;
            key-positions = <18 19>;
            layers = <DEF_L>;
            bindings = <&kp RBRC>;
        };

        tilde_kp {
	    timeout-ms = <50>;
            key-positions = <21 22>;
            layers = <DEF_L>;
            bindings = <&kp TILDE>;
        };

        grave_kp {
	    timeout-ms = <50>;
            key-positions = <22 23>;
            layers = <DEF_L>;
            bindings = <&kp GRAVE>;
        };

        bslh_kp {
	    timeout-ms = <50>;
            key-positions = <26 27>;
            layers = <DEF_L>;
            bindings = <&kp BSLH>;
        };

        pipe_kp {
	    timeout-ms = <50>;
            key-positions = <27 28>;
            layers = <DEF_L>;
            bindings = <&kp PIPE>;
        };

        layer_kbr {
        timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&tog KBR_L>;
        }

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q           &kp W           &kp F           &kp P           &kp B         &kp J           &kp L           &kp U           &kp Y           &kp SEMI                            
                &hm LGUI A      &hm LALT R      &hm LSHFT S     &hm LCTRL T     &kp G         &kp M           &hm RCTRL N     &hm RSHFT E     &hm LALT I      &hm LGUI O
                &kp Z           &kp X           &kp C           &kp D           &kp V         &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH
                                                                &lt FUN_L TAB   &lt NAV_L RET &lt SYM_L SPACE &kp BKSP
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp C_AC_CLOSE  &kp C_PREV      &kp C_NEXT      &trans          &kp C_VOL_UP  &trans          &kp HOME        &kp PG_DN       &kp PG_UP       &kp END
                &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &kp C_VOL_DN  &kp C_AL_CALC   &kp LARW        &kp DARW        &kp UARW        &kp RARW
                &trans          &trans          &trans          &trans          &kp C_PP      &kp INS         &kp HOME        &kp PG_DN       &kp PG_UP       &kp END
                                                                &trans          &trans        &kp ESC         &kp DEL
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp EXCL        &kp AT          &kp HASH        &kp DOLLAR      &kp PERCENT   &kp BACKSLASH   &kp N7          &kp N8          &kp N9          &kp COMMA
                &kp PLUS        &kp EQUAL       &kp UNDERSCORE  &kp MINUS       &kp CARET     &kp N0          &kp N4          &kp N5          &kp N6          &kp DOT
                &kp TILDE       &kp LS(N1)      &kp LS(N2)      &kp STAR        &kp AMPS      &kp SEMICOLON   &kp N1          &kp N2          &kp N3          &kp SLASH
                                                                &kp BKSP        &kp SPACE     &trans          &trans
            >;
        };

        func_layer {
            label = "Func";
            bindings = <
                &kp F1          &kp F2          &kp F3          &kp F4          &kp F5        &trans          &trans          &trans          &trans          &trans
                &kp F6          &kp F7          &kp F8          &kp F9          &kp F10       &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4
                &trans          &trans          &trans          &kp F11         &kp F12       &trans          &trans          &trans          &trans          &bt BT_CLR
                                                                &trans          &trans        &trans          &trans
            >;
        };

        keybr_layer {
            label = "Base";
            bindings = <
                &kp Q           &kp W           &kp F           &kp P           &kp B         &kp J           &kp L           &kp U           &kp Y           &kp SEMI                            
                &kp A           &kp R           &kp S           &kp T           &kp G         &kp M           &kp N           &kp E           &kp I           &kp O
                &kp Z           &kp X           &kp C           &kp D           &kp V         &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH
                                                                &kp TAB         &kp RET       &kp SPACE       &kp BKSP
            >;
        };

    };
};

